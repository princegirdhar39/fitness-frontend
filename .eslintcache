[{"D:\\college\\fitness-frontend\\src\\index.js":"1","D:\\college\\fitness-frontend\\src\\App.js":"2","D:\\college\\fitness-frontend\\src\\reportWebVitals.js":"3","D:\\college\\fitness-frontend\\src\\Dashboard.js":"4","D:\\college\\fitness-frontend\\src\\components\\Login\\Login.js":"5","D:\\college\\fitness-frontend\\src\\components\\user-list-item.jsx":"6","D:\\college\\fitness-frontend\\src\\components\\add-usermodel.jsx":"7","D:\\college\\fitness-frontend\\src\\components\\selected-users.jsx":"8","D:\\college\\fitness-frontend\\src\\components\\search-user.jsx":"9","D:\\college\\fitness-frontend\\src\\fontawesome\\index.js":"10","D:\\college\\fitness-frontend\\src\\components\\add-prescription-model.jsx":"11","D:\\college\\fitness-frontend\\src\\components\\add-conditionmodel.jsx":"12"},{"size":562,"mtime":1650365982833,"results":"13","hashOfConfig":"14"},{"size":809,"mtime":1652848940705,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1650365982835,"results":"16","hashOfConfig":"14"},{"size":18336,"mtime":1652856430094,"results":"17","hashOfConfig":"14"},{"size":2254,"mtime":1652212223640,"results":"18","hashOfConfig":"14"},{"size":651,"mtime":1652837003486,"results":"19","hashOfConfig":"14"},{"size":3494,"mtime":1652856449525,"results":"20","hashOfConfig":"14"},{"size":838,"mtime":1652837188057,"results":"21","hashOfConfig":"14"},{"size":475,"mtime":1652217426981,"results":"22","hashOfConfig":"14"},{"size":259,"mtime":1650365982833,"results":"23","hashOfConfig":"14"},{"size":2110,"mtime":1652866230416,"results":"24","hashOfConfig":"14"},{"size":2085,"mtime":1652836687709,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"x96ilr",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"28"},"D:\\college\\fitness-frontend\\src\\index.js",[],["58","59"],"D:\\college\\fitness-frontend\\src\\App.js",["60"],"import React, { useState } from 'react';\r\nimport Dashboard from \"./Dashboard\"\r\nimport Login from \"./components/Login/Login\";\r\n\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nconst App = () => {\r\n  const [token, setToken] = useState();\r\n  if(!token) {\r\n    return(\r\n    <BrowserRouter>\r\n     <Switch>\r\n     <Route path=\"/dashboard\" component={Dashboard} />\r\n          \r\n          <Route path=\"/login\" component={Login} />\r\n          {/* <Login setToken={setToken} /> */}\r\n         \r\n        </Switch>\r\n    \r\n    \r\n    </BrowserRouter>\r\n    \r\n    )\r\n  }\r\n  return (\r\n    <>\r\n    <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/dashboard\">\r\n            <Dashboard />\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n      \r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","D:\\college\\fitness-frontend\\src\\reportWebVitals.js",[],"D:\\college\\fitness-frontend\\src\\Dashboard.js",["61","62","63","64","65","66","67","68","69"],"import React, { Component, useState, useEffect } from \"react\";\r\nimport \"./fontawesome\";\r\nimport \"./App.css\";\r\nimport { UserListItem } from \"./components/user-list-item\";\r\nimport { SearchUser } from \"./components/search-user\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport { faSleigh } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { MdDone, MdNoteAdd, MdClear } from \"react-icons/md\";\r\nimport { FaPlusCircle } from \"react-icons/fa\";\r\nimport { notification,Modal} from \"antd\";\r\nimport { success } from \"@ant-design/icons\";\r\n\r\n\r\nimport {\r\n  Button,\r\n  Header,\r\n  Image,\r\n  // Modal,\r\n  Form,\r\n  TextArea,\r\n} from \"semantic-ui-react\";\r\nimport { AiOutlineLogout } from \"react-icons/ai\";\r\nimport { AddUser } from \"./components/add-usermodel\";\r\nimport { SelectedUser } from \"./components/selected-users\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AddPrescription } from \"./components/add-prescription-model\";\r\nimport { Fab } from \"@material-ui/core\";\r\nimport { AddCondition } from \"./components/add-conditionmodel\";\r\n\r\nconst { confirm } = Modal;\r\n\r\n\r\nconst Dashboard = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [all_prescriptions, setPrescriptions] = useState([]);\r\n  const [all_conditions, setConditions] = useState([]);\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [filteredUsers, setFilteredUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [prescriptionName, setprescriptionName] = useState(\"\");\r\n  const [conditionName, setconditionName] = useState(\"\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [openPres, setOpenPres] = React.useState(false);\r\n  const [openCodd,setOpenCond] =useState(false);\r\n\r\n  const [note, setNote] = useState('');\r\n\r\n  const [remainingPrescriptions, setRemainingPrescriptions] = useState([]);\r\n  const [remainingConditions, setReamainingConditions] = useState([]);\r\n\r\n  const openNotificationWithIcon = type => {\r\n    notification[type]({\r\n      message: 'Note Updated',\r\n      description:\r\n        '',\r\n    });\r\n  };\r\n  \r\n\r\n  const userSelected = (user) => {\r\n    setSelectedUser(user);\r\n\r\n    console.log(\"All prescriptions\", all_prescriptions);\r\n    console.log(\"user.prescription\", user.prescription);\r\n    console.log(\"user.conditions\", user.conditions);\r\n    console.log(selectedUser);\r\n\r\n    setRemainingPrescriptions(\r\n      all_prescriptions.filter((pres) => {\r\n        return !user.prescription.some((user_pres) => user_pres.id === pres.id);\r\n      })\r\n    );\r\n\r\n    setReamainingConditions(\r\n      all_conditions.filter((cond) => {\r\n        return !user.conditions.some((user_cond) => user_cond.id === cond.id);\r\n      })\r\n    );\r\n    if(user.note){\r\n\r\n      setNote(user.note);\r\n    }\r\n    else{\r\n      setNote(\"\");\r\n    }\r\n  };\r\n\r\n  const addPrescriptionToUser = (prescription) => {\r\n    // console.log('selected user:', selectedUser.prescriptions);\r\n    setRemainingPrescriptions(\r\n      remainingPrescriptions.filter((pres) => pres.id !== prescription.id)\r\n    );\r\n    setSelectedUser({\r\n      ...selectedUser,\r\n      prescription: [...selectedUser.prescription, prescription],\r\n    });\r\n    console.log(\"selected user:\", selectedUser);\r\n    console.log({\r\n      ...selectedUser,\r\n      prescriptions: [...selectedUser.prescription, prescription],\r\n    });\r\n\r\n    //add prescription\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        userId: selectedUser.id,\r\n        prescriptionId: prescription.id,\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:3000/users/assign-prescription\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((newPrescription) => {\r\n        // setOpen(false);\r\n        setPrescriptions([newPrescription, ...all_prescriptions]);\r\n        notification.success({message: 'Prescription added successfuly'});\r\n\r\n      });\r\n  };\r\n\r\n  const removePrescription = (prescription) => {\r\n    setSelectedUser({\r\n      ...selectedUser,\r\n      prescription: selectedUser.prescription.filter(\r\n        (pres) => pres.id !== prescription.id\r\n      ),\r\n    });\r\n    setRemainingPrescriptions([...remainingPrescriptions, prescription]);\r\n    const requestOptions = {\r\n      method: \"DELETE\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        userId: selectedUser.id,\r\n        prescriptionId: prescription.id,\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:3000/users/remove-prescription\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((newPrescription) => {\r\n        // setOpen(false);\r\n        setPrescriptions([newPrescription, ...all_prescriptions]);\r\n        notification.success({message: 'Prescription removed successfuly'});\r\n\r\n      });\r\n    \r\n  };\r\n\r\n  const addConditionToUser = (condition) => {\r\n    setReamainingConditions(\r\n      remainingConditions.filter((cond) => cond.id !== condition.id)\r\n    );\r\n    setSelectedUser({\r\n      ...selectedUser,\r\n      conditions: [...selectedUser.conditions, condition],\r\n    });\r\n    //addcondition\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        userId: selectedUser.id,\r\n        conditionId: condition.id,\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:3000/users/assign-condition\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((newCondition) => {\r\n        //setOpen(false);\r\n        setConditions([newCondition, ...all_conditions]);\r\n        notification.success({message: 'Test assigned successfuly'});\r\n      });\r\n  };\r\n  const removeCondition = (condition) => {\r\n    setSelectedUser({\r\n      ...selectedUser,\r\n      conditions: selectedUser.conditions.filter(\r\n        (cond) => cond.id !== condition.id\r\n      ),\r\n    });\r\n    setReamainingConditions([...remainingConditions, condition]);\r\n    const requestOptions = {\r\n      method: \"Delete\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        userId: selectedUser.id,\r\n        conditionId: condition.id,\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:3000/users/remove-condition\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((newCondition) => {\r\n        //setOpen(false);\r\n        setConditions([newCondition, ...all_conditions]);\r\n        notification.success({message: 'Test removed successfuly'});\r\n\r\n      });\r\n\r\n  };\r\n\r\n  //get users request\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3000/users\")\r\n      .then((res) => res.json())\r\n      .then((data) => setUsers(data));\r\n  }, []);\r\n  //get prescriptions\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3000/prescription\")\r\n      .then((res) => res.json())\r\n      .then((data) => setPrescriptions(data));\r\n  }, []);\r\n  //get conditions\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3000/conditions\")\r\n      .then((res) => res.json())\r\n      .then((data) => setConditions(data));\r\n  }, []);\r\n\r\n  //search filter\r\n  useEffect(() => {\r\n    setFilteredUsers(\r\n      users.filter((user) => {\r\n        return (\r\n          user.first_name.toLowerCase().includes(search.toLowerCase()) ||\r\n          user.last_name.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n      })\r\n    );\r\n  }, [search, users]);\r\n  //post request\r\n\r\n  const createNewUser = (firstName, lastName, email) => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        P_fname: firstName,\r\n        P_lname: lastName,\r\n        P_email: email,\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:3000/users\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((newUser) => {\r\n        setOpen(false);\r\n        setUsers([newUser, ...users]);\r\n        notification.success({message : 'User added successfuly'})\r\n      });\r\n  };\r\n  const createNewPrescription = () => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        P_prescription: prescriptionName,\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:3000/prescription\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((newPrescription) => {\r\n        setOpenPres(false);\r\n        setPrescriptions([newPrescription, ...remainingPrescriptions]);\r\n      });\r\n\r\n  }\r\n  const createNewCondition = () => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        P_condition: conditionName,\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:3000/conditions\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((newCondition) => {\r\n        setOpenCond(false);\r\n        setConditions([newCondition, ...remainingConditions]);\r\n      });\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AddUser\r\n        setFirstName={setFirstName}\r\n        setLastName={setLastName}\r\n        setEmail={setEmail}\r\n        setOpen={setOpen}\r\n        createNewUser={createNewUser}\r\n        firstName={firstName}\r\n        lastName={lastName}\r\n        email={email}\r\n        open={open}\r\n      />\r\n      <AddPrescription\r\n      createNewPrescription={createNewPrescription}\r\n      prescriptionName={prescriptionName}\r\n      setprescriptionName={setprescriptionName}\r\n      openPres={openPres}\r\n      setOpenPres={setOpenPres}\r\n\r\n\r\n      />\r\n      <AddCondition\r\n      createNewCondition={createNewCondition}\r\n      conditionName={conditionName}\r\n      setconditionName={setconditionName}\r\n      openCodd={openCodd}\r\n      setOpenCond={setOpenCond}\r\n      \r\n      />\r\n      <div\r\n        style={{\r\n          backgroundColor: \"rgb(75 85 99)\",\r\n          height: \"65px\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          paddingLeft: \"28PX\",\r\n          position: \"sticky\",\r\n          top: \"0\",\r\n        }}\r\n        className=\"header\"\r\n      >\r\n        <div style={{ color: \"white\", fontSize: \"30PX\" }}>DigiHealth</div>\r\n        {/* <Link to='/' style={{color: 'white',fontSize:'20PX', backgroundColor: 'red',cursor:'pointer',padding: '8px',marginRight:'10px',borderRadius:'4px' }}>Logout</Link> */}\r\n        <Link to='/login'><AiOutlineLogout style={{fontSize:'39px', marginRight: '10px', color: 'red', cursor: 'pointer' }} /></Link>\r\n      </div>\r\n\r\n      <div className=\"container-1\">\r\n        {/* <div>hello</div> */}\r\n\r\n        <div className=\"container-2\">\r\n          <div className=\"container-4\">\r\n            <SearchUser fsetSearch={setSearch} />\r\n            <Button color=\"blue\" onClick={() => setOpen(true)}>\r\n              New\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"user-list\">\r\n            {filteredUsers.map((user) => {\r\n              return (\r\n                <UserListItem\r\n                  key={user.id}\r\n                  setSelectedUser={userSelected}\r\n                  user={user}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"addUser\">\r\n            {/* <Button color=\"blue\" onClick={() => setOpen(true)}>\r\n              Add User\r\n            </Button> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"container-3\">\r\n          <SelectedUser selectedUser={selectedUser} />\r\n\r\n          <div className=\"container-7\">\r\n            {!selectedUser && (\r\n              <div className=\"notselected \">\r\n                <img\r\n                  style={{ width: \"8rem\", marginBottom: \"1rem\" }}\r\n                  className=\"w-32 mb-4\"\r\n                  src=\"https://cdn.pixabay.com/photo/2022/01/08/11/06/plant-6923699_960_720.png\"\r\n                />\r\n                <div>It seems you haven't selected any user yet.</div>\r\n                <div>Choose one on the left.</div>\r\n              </div>\r\n            )}\r\n            {selectedUser && (\r\n              <div\r\n                style={{\r\n                  background:\r\n                    selectedUser === selectedUser.firstName\r\n                      ? \"rgba(55, 65, 81, 0.15)\"\r\n                      : \"transparent\",\r\n                }}\r\n                className=\"pres-cond\"\r\n              >\r\n                <div className=\"list-container\">\r\n                  <div className=\"title\">\r\n                    <div style={{backgroundColor: ''}}>\r\n\r\n                    Prescriptions \r\n                  <FaPlusCircle onClick={() => setOpenPres(true)} style={{marginLeft: '9px', fontSize: '15px', cursor: 'pointer'}} />\r\n                    </div>\r\n                  \r\n                  </div>\r\n                  <div className=\"list\">\r\n                    <div className=\"assigned-pres-cond\">\r\n                      <div className=\"assigned-title\">\r\n                        Assigned-prescriptions\r\n                      </div>\r\n                      {selectedUser.prescription.map((p) => (\r\n                        <div className=\"list-item\">\r\n                          {p.prescription}\r\n                          <div>\r\n                          <MdClear\r\n                            style={{ color: \"red\", cursor: \"pointer\", flex: 1 }}\r\n                            onClick={() => removePrescription(p)}\r\n                          />\r\n                          </div>\r\n                          {/* <Button onClick={() => removePrescription(p)}>\r\n                            Remove\r\n                          </Button> */}\r\n                          {/* <MdClear style={{color:\"red\", cursor:\"pointer\", flex: 1} } onClick={() => removePrescription(c)}/> */}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                    <div className=\"remaining-pres-cond\">\r\n                      <div className=\"assigned-title\">\r\n                        <div>Select prescriptions</div>\r\n                      </div>\r\n                      {remainingPrescriptions.map((p) => (\r\n                        // <div className=\"pres-cond-list\">\r\n                        <div className=\"list-item\">\r\n                          {p.prescription}\r\n                          <div>\r\n                          <MdDone\r\n                            style={{\r\n                              color: \"green\",\r\n                              cursor: \"pointer\",\r\n                              flex: 1,\r\n                            }}\r\n                            onClick={() => addPrescriptionToUser(p)}\r\n                          />\r\n                          </div>\r\n                        </div>\r\n                        // </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"list-container\">\r\n                  <div className=\"title\">Medical Tests\r\n                  <FaPlusCircle onClick={() => setOpenCond(true)} style={{marginLeft: '9px', fontSize: '15px', cursor: 'pointer'}} />\r\n                  \r\n                   </div>\r\n                  <div className=\"list\">\r\n                    <div className=\"assigned-pres-cond\">\r\n                      <div className=\"assigned-title\">Assigned-Tests</div>\r\n                      {selectedUser.conditions.map((c) => (\r\n                        <div className=\"list-item\">\r\n                          {c.condition}\r\n                          <div>\r\n                          <MdClear\r\n                            style={{ color: \"red\", cursor: \"pointer\", flex: 1 }}\r\n                            onClick={() => removeCondition(c)}\r\n                          />\r\n                        </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                    <div className=\"remaining-pres-cond\">\r\n                      <div className=\"assigned-title\">Select Tests</div>\r\n                      {remainingConditions.map((c) => (\r\n                        <div className=\"list-item\">\r\n                          {c.condition}\r\n                          <div>\r\n                          <MdDone\r\n                            style={{\r\n                              color: \"green\",\r\n                              cursor: \"pointer\",\r\n                              flex: 1,\r\n                            }}\r\n                            onClick={() => {\r\n                              addConditionToUser(c)\r\n                            }\r\n                            } \r\n                          />\r\n                        </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {selectedUser && (\r\n              <div className=\"notes\">\r\n                <Form>\r\n                  <TextArea\r\n                    value={note}\r\n                    placeholder=\"Add a note\"\r\n                    onChange={(e) => {\r\n                      console.log(\"updating note\");\r\n                      console.log(selectedUser.note)\r\n                      setNote( e.target.value,\r\n                      );\r\n                    }}\r\n                  />\r\n                </Form>\r\n                <div className=\"update-button\">\r\n                <Button className=\"\"\r\n                style={{width:'80px', marginLeft: ''}}\r\n                  onClick={() => {\r\n                    openNotificationWithIcon('success')\r\n                    \r\n                    const requestOptions = {\r\n                      method: \"PUT\",\r\n                      headers: { \"Content-Type\": \"application/json\" },\r\n                      body: JSON.stringify({\r\n                        userId: selectedUser.id,\r\n                        note,\r\n                      }),\r\n                    };\r\n                    fetch(\r\n                      \"http://localhost:3000/users/update-user-note\",\r\n                      requestOptions\r\n                    );\r\n                  }}  \r\n                  color=\"blue\"\r\n                >\r\n                  Update Note\r\n                </Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","D:\\college\\fitness-frontend\\src\\components\\Login\\Login.js",[],"D:\\college\\fitness-frontend\\src\\components\\user-list-item.jsx",[],"D:\\college\\fitness-frontend\\src\\components\\add-usermodel.jsx",["70","71","72","73","74","75","76"],"import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Header,\r\n  Image,\r\n  Modal,\r\n  Form,\r\n  TextArea,\r\n} from \"semantic-ui-react\";\r\nimport './add-user-model.css';\r\nimport { notification } from \"antd\";\r\n\r\n\r\n\r\nexport const AddUser = (props) => {\r\n  const [firstNameError, setFirstNameError] = useState(\"\");\r\n  const [lastNameError, setLastNameError] = useState(\" \");\r\n  const {email} = props;\r\n  function validateEmail(email) {\r\n    const re =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test((email).toLowerCase());\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => props.setOpen(false)}\r\n      onOpen={() => props.setOpen(true)}\r\n      open={props.open}\r\n    >\r\n      <Modal.Header>Add a User</Modal.Header>\r\n      <Modal.Content image>\r\n        <Modal.Description>\r\n          <Form>\r\n            <Form.Field>\r\n              <label>First Name</label>\r\n              <input\r\n                placeholder=\"First Name\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                onChange={(e) => props.setFirstName(e.target.value)}\r\n              />\r\n              \r\n                \r\n              \r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Last Name</label>\r\n              <input\r\n                placeholder=\"Last Name\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                onChange={(e) => props.setLastName(e.target.value)}\r\n              />\r\n              {lastNameError === \"EMPTY\" && (\r\n                <span className=\"text-sm text-red-500\">\r\n                  *Please enter last name\r\n                </span>\r\n                \r\n              )}\r\n              \r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Email</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Email\"\r\n                onChange={(e) => props.setEmail(e.target.value)}\r\n              />\r\n            </Form.Field>\r\n          </Form>\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button\r\n          style={{ width: 100 }}\r\n          color=\"black\"\r\n          onClick={() => props.setOpen(false)}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          style={{ width: 100,height: 39 }}\r\n          content=\"Add\"\r\n          labelPosition=\"right\"\r\n          icon=\"checkmark\"\r\n          // onClick={() => setOpen(false)}\r\n          type=\"submit\"\r\n          className=\"blue\"\r\n          disabled={!props.firstName||!props.lastName||!props.email||!props.email.includes(\"@\")||!validateEmail(email)}\r\n          \r\n          positive\r\n          onClick={() => {\r\n            props.createNewUser(props.firstName, props.lastName, props.email);\r\n            \r\n              \r\n             \r\n            \r\n            \r\n          }\r\n            }\r\n          \r\n        />\r\n        <div style={{display:'flex', flexDirection:'column',justifyContent:'center',alignItems:'flex-start',fontSize:'20px'}}>\r\n      <div style={{fontColor: 'red', color: 'red'}} className=\"\">\r\n                  *First name can not be empty\r\n                </div>\r\n                <div style={{fontColor: 'red', color: 'red'}} className=\"\">\r\n                  *Last name can not be empty\r\n                </div>\r\n                </div>\r\n      </Modal.Actions>\r\n      \r\n    </Modal>\r\n  );\r\n};\r\n","D:\\college\\fitness-frontend\\src\\components\\selected-users.jsx",["77"],"import React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nexport const SelectedUser = (props) => {\r\n  return (\r\n    <div className=\"selected-user-container-6\">\r\n      {props.selectedUser && (\r\n        <div className=\"selected-item\">\r\n          <img\r\n            src={`https://t3.ftcdn.net/jpg/01/18/01/98/360_F_118019822_6CKXP6rXmVhDOzbXZlLqEM2ya4HhYzSV.jpg`}\r\n            alt=\"Avatar\"\r\n            className=\"avatar\"\r\n          />\r\n          <div className=\"selected-user-details\">\r\n            <div className=\"selected-user-name\">\r\n              {props.selectedUser.first_name} {props.selectedUser.last_name}\r\n            </div>\r\n          </div>\r\n          {/* <Button style={{width : 59, backgroundColor: 'red', color:'white',padding: '10px'}}>Logout</Button> */}\r\n\r\n\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","D:\\college\\fitness-frontend\\src\\components\\search-user.jsx",[],"D:\\college\\fitness-frontend\\src\\fontawesome\\index.js",[],["78","79"],"D:\\college\\fitness-frontend\\src\\components\\add-prescription-model.jsx",["80","81","82","83"],"import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Header,\r\n  Image,\r\n  Modal,\r\n  Form,\r\n  TextArea,\r\n} from \"semantic-ui-react\";\r\nimport './add-user-model.css';\r\n\r\n\r\nexport const AddPrescription = (props) => {\r\n//   const [firstNameError, setFirstNameError] = useState(\"\");\r\n//   const [lastNameError, setLastNameError] = useState(\" \");\r\n//   const {email} = props;\r\n  \r\n  return (\r\n    <Modal\r\n      onClose={() => props.setOpenPres(false)}\r\n      onOpen={() => props.setOpenPres(true)}\r\n      open={props.openPres}\r\n    >\r\n      <Modal.Header>Add a Prescription</Modal.Header>\r\n      <Modal.Content image>\r\n        <Modal.Description>\r\n          <Form>\r\n            <Form.Field>\r\n              <label>Enter the name of the medicine</label>\r\n              <input\r\n                placeholder=\" Name\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                onChange={(e) => props.setprescriptionName(e.target.value)}\r\n              />\r\n              \r\n                \r\n              \r\n            </Form.Field>\r\n           \r\n        \r\n          </Form>\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button\r\n          style={{ width: 100 }}\r\n          color=\"black\"\r\n          onClick={() => props.setOpenPres(false)}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          style={{ width: 100,height: 37 }}\r\n          content=\"Add\"\r\n          labelPosition=\"right\"\r\n          icon=\"checkmark\"\r\n          // onClick={() => setOpen(false)}\r\n          type=\"submit\"\r\n          className=\"blue\"\r\n          \r\n          positive\r\n          onClick={() => {\r\n            if(props.prescriptionName === ' '){\r\n                alert('Enter something');\r\n            }\r\n            // props.createNewUser(props.firstName, props.lastName, props.email);\r\n            props.createNewPrescription(props.prescriptionName);\r\n           \r\n\r\n            \r\n              \r\n             \r\n            \r\n            \r\n          }\r\n            }\r\n          \r\n        />\r\n        \r\n      </Modal.Actions>\r\n      \r\n    </Modal>\r\n  );\r\n};\r\n","D:\\college\\fitness-frontend\\src\\components\\add-conditionmodel.jsx",["84","85","86","87"],"import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Header,\r\n  Image,\r\n  Modal,\r\n  Form,\r\n  TextArea,\r\n} from \"semantic-ui-react\";\r\nimport './add-user-model.css';\r\n\r\n\r\nexport const AddCondition = (props) => {\r\n//   const [firstNameError, setFirstNameError] = useState(\"\");\r\n//   const [lastNameError, setLastNameError] = useState(\" \");\r\n//   const {email} = props;\r\n  \r\n  return (\r\n    <Modal\r\n      onClose={() => props.setOpenCond(false)}\r\n      onOpen={() => props.setOpenCond(true)}\r\n      open={props.openCodd}\r\n    >\r\n      <Modal.Header>Add a Test</Modal.Header>\r\n      <Modal.Content image>\r\n        <Modal.Description>\r\n          <Form>\r\n            <Form.Field>\r\n              <label>Enter the name of the test</label>\r\n              <input\r\n                placeholder=\"Name\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                onChange={(e) => props.setconditionName(e.target.value)}\r\n              />\r\n              \r\n                \r\n              \r\n            </Form.Field>\r\n           \r\n        \r\n          </Form>\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button\r\n          style={{ width: 100 }}\r\n          color=\"black\"\r\n          onClick={() => props.setOpenCond(false)}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          style={{ width: 100,height: 37 }}\r\n          content=\"Add\"\r\n          labelPosition=\"right\"\r\n          icon=\"checkmark\"\r\n          // onClick={() => setOpen(false)}\r\n          type=\"submit\"\r\n          className=\"blue\"\r\n          \r\n          positive\r\n          onClick={() => {\r\n            if(props.prescriptionName === ' '){\r\n                alert('Enter something');\r\n            }\r\n            // props.createNewUser(props.firstName, props.lastName, props.email);\r\n            props.createNewCondition(props.conditionName);\r\n           \r\n\r\n            \r\n              \r\n             \r\n            \r\n            \r\n          }\r\n            }\r\n          \r\n        />\r\n        \r\n      </Modal.Actions>\r\n      \r\n    </Modal>\r\n  );\r\n};\r\n",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":8,"column":17,"nodeType":"94","messageId":"95","endLine":8,"endColumn":25},{"ruleId":"92","severity":1,"message":"96","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"92","severity":1,"message":"97","line":7,"column":10,"nodeType":"94","messageId":"95","endLine":7,"endColumn":18},{"ruleId":"92","severity":1,"message":"98","line":8,"column":18,"nodeType":"94","messageId":"95","endLine":8,"endColumn":27},{"ruleId":"92","severity":1,"message":"99","line":11,"column":10,"nodeType":"94","messageId":"95","endLine":11,"endColumn":17},{"ruleId":"92","severity":1,"message":"100","line":16,"column":3,"nodeType":"94","messageId":"95","endLine":16,"endColumn":9},{"ruleId":"92","severity":1,"message":"101","line":17,"column":3,"nodeType":"94","messageId":"95","endLine":17,"endColumn":8},{"ruleId":"92","severity":1,"message":"102","line":27,"column":10,"nodeType":"94","messageId":"95","endLine":27,"endColumn":13},{"ruleId":"92","severity":1,"message":"103","line":30,"column":9,"nodeType":"94","messageId":"95","endLine":30,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":372,"column":17,"nodeType":"106","endLine":376,"endColumn":19},{"ruleId":"92","severity":1,"message":"100","line":4,"column":3,"nodeType":"94","messageId":"95","endLine":4,"endColumn":9},{"ruleId":"92","severity":1,"message":"101","line":5,"column":3,"nodeType":"94","messageId":"95","endLine":5,"endColumn":8},{"ruleId":"92","severity":1,"message":"107","line":8,"column":3,"nodeType":"94","messageId":"95","endLine":8,"endColumn":11},{"ruleId":"92","severity":1,"message":"108","line":11,"column":10,"nodeType":"94","messageId":"95","endLine":11,"endColumn":22},{"ruleId":"92","severity":1,"message":"109","line":16,"column":10,"nodeType":"94","messageId":"95","endLine":16,"endColumn":24},{"ruleId":"92","severity":1,"message":"110","line":16,"column":26,"nodeType":"94","messageId":"95","endLine":16,"endColumn":43},{"ruleId":"92","severity":1,"message":"111","line":17,"column":25,"nodeType":"94","messageId":"95","endLine":17,"endColumn":41},{"ruleId":"92","severity":1,"message":"112","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":16},{"ruleId":"88","replacedBy":"113"},{"ruleId":"90","replacedBy":"114"},{"ruleId":"92","severity":1,"message":"115","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"100","line":4,"column":3,"nodeType":"94","messageId":"95","endLine":4,"endColumn":9},{"ruleId":"92","severity":1,"message":"101","line":5,"column":3,"nodeType":"94","messageId":"95","endLine":5,"endColumn":8},{"ruleId":"92","severity":1,"message":"107","line":8,"column":3,"nodeType":"94","messageId":"95","endLine":8,"endColumn":11},{"ruleId":"92","severity":1,"message":"115","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"100","line":4,"column":3,"nodeType":"94","messageId":"95","endLine":4,"endColumn":9},{"ruleId":"92","severity":1,"message":"101","line":5,"column":3,"nodeType":"94","messageId":"95","endLine":5,"endColumn":8},{"ruleId":"92","severity":1,"message":"107","line":8,"column":3,"nodeType":"94","messageId":"95","endLine":8,"endColumn":11},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'setToken' is assigned a value but never used.","Identifier","unusedVar","'Component' is defined but never used.","'faSleigh' is defined but never used.","'MdNoteAdd' is defined but never used.","'success' is defined but never used.","'Header' is defined but never used.","'Image' is defined but never used.","'Fab' is defined but never used.","'confirm' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TextArea' is defined but never used.","'notification' is defined but never used.","'firstNameError' is assigned a value but never used.","'setFirstNameError' is assigned a value but never used.","'setLastNameError' is assigned a value but never used.","'Button' is defined but never used.",["116"],["117"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]